/**
 *
 */
package org.nightlabs.jfire.base.ui.person.edit.blockbased.special;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.nightlabs.base.ui.composite.LabeledText;
import org.nightlabs.base.ui.exceptionhandler.ExceptionHandlerRegistry;
import org.nightlabs.jfire.base.ui.prop.edit.blockbased.DataBlockEditorChangedEvent;
import org.nightlabs.jfire.base.ui.prop.edit.blockbased.DataBlockEditorChangedListener;
import org.nightlabs.jfire.base.ui.prop.edit.blockbased.DataBlockWizardPage;
import org.nightlabs.jfire.base.ui.resource.Messages;
import org.nightlabs.jfire.person.Person;
import org.nightlabs.jfire.person.PersonStruct;
import org.nightlabs.jfire.prop.dao.StructLocalDAO;
import org.nightlabs.progress.NullProgressMonitor;

/**
 * @author Alexander Bieber <!-- alex [AT] nightlabs [DOT] de -->
 *
 */
public class PersonPersonalDataWizardPage
extends DataBlockWizardPage
{
	private LabeledText displayName;
	private Button autoCreateDisplayName;
//	private String structLocalScope;

	/**
	 * @param pageName
	 */
	public PersonPersonalDataWizardPage(String pageName, String title, Person person) {
		super(pageName, title, person.getStructure(), person, PersonStruct.PERSONALDATA);
//		if (person.getStructure() instanceof StructLocal) {
//			this.structLocalScope = ((StructLocal) person.getStructure()).getStructLocalScope();
//		}
	}

	/**
	 *
	 * @see org.eclipse.jface.dialogs.IDialogPage#createControl(org.eclipse.swt.widgets.Composite)
	 */
	@Override
	public Control createPageContents(Composite parent) {
		createWrapper(parent);

		displayName = new LabeledText(getWrapperComp(), Messages.getString("org.nightlabs.jfire.base.ui.person.edit.blockbased.special.PersonPersonalDataWizardPage.displayName.caption")); //$NON-NLS-1$
		GridData displayNameGD = new GridData();
		displayNameGD.horizontalAlignment = GridData.FILL;
		displayNameGD.grabExcessHorizontalSpace = true;
		displayName.setLayoutData(displayNameGD);

		autoCreateDisplayName = new Button(getWrapperComp(), SWT.CHECK);
		GridData autoCreateDisplayNameGD = new GridData();
		autoCreateDisplayName.setLayoutData(autoCreateDisplayNameGD);
		autoCreateDisplayName.setText(Messages.getString("org.nightlabs.jfire.base.ui.person.edit.blockbased.special.PersonPersonalDataWizardPage.autoCreateDisplayName.text")); //$NON-NLS-1$
		autoCreateDisplayName.addSelectionListener(
			new SelectionListener() {
				public void widgetSelected(SelectionEvent arg0) {
					displayName.getTextControl().setEnabled(!autoCreateDisplayName.getSelection());
					updatePropertySet();
				}
				public void widgetDefaultSelected(SelectionEvent arg0) {
				}
			}
		);
		if (getPerson() != null) {
			autoCreateDisplayName.setSelection(getPerson().isAutoGenerateDisplayName());
			if (getPerson().getDisplayName() != null) {
				displayName.setText(getPerson().getDisplayName());
			}
		}
		else {
			autoCreateDisplayName.setSelection(true);
		}
		displayName.getTextControl().setEnabled(!autoCreateDisplayName.getSelection());

		Composite dummy = new Composite(getWrapperComp(),SWT.NONE);
		GridData dummyGD = new GridData();
		dummyGD.heightHint = 10;
		dummy.setLayoutData(dummyGD);

		setPropDataBlockEditorColumnHint(1);
		createDataBlockEditors();
		getDataBlockGroupEditor(PersonStruct.PERSONALDATA).addDataBlockEditorChangedListener(new DataBlockEditorChangedListener() {
			@Override
			public void dataBlockEditorChanged(DataBlockEditorChangedEvent dataBlockEditorChangedEvent) {
				pageChanged();
			}
		});
		pageChanged();
		return getWrapperComp();
	}

	protected void pageChanged() {
		try {
			updatePropertySet();
		} catch (Throwable t) {
			ExceptionHandlerRegistry.syncHandleException(t);
		}
	}

	@Override
	public void updatePropertySet() {
		super.updatePropertySet();
		getPropertySet().setAutoGenerateDisplayName(autoCreateDisplayName.getSelection());
		getPropertySet().setDisplayName(displayName.getTextControl().getText(), StructLocalDAO.sharedInstance().getStructLocal(
				getPropertySet().getStructLocalObjectID(),
//				Organisation.DEV_ORGANISATION_ID,
//				Person.class, Person.STRUCT_SCOPE, structLocalScope,
				new NullProgressMonitor())
		);
	}

	public Person getPerson() {
		return (Person) getPropertySet();
	}
}
